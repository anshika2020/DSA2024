@startuml

title __LINKEDLISTDS's Class Diagram__\n

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.AddTwoNumberInLinkedList121220 {
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.FindMiddleNodeOfLinkedList {
          {static} - head : Node
          {static} + getMidlleElemeWithLinear()
          {static} + main()
          {static} - getLengthOfLinkedList()
          {static} - getMidlleElemWithRecursive()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.InsertANodeAtPosition {
          {static} + main()
          {static} - insertNodeAtPosition()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.InsertANodeAtPosition.LinkedList {
          {static} + addNode()
          + print()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.InsertANodeAtPosition.Node {
          ~ data : int
          + Node()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.LinkedList {
          + LinkedList()
          + addNode()
          + getHead()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.LinkedList.Node {
          - data : String
          + Node()
          + getData()
          + getNext()
          + setData()
          + setNext()
          + toString()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.NodesLength {
          {static} + countLength()
          {static} + countlengthRec()
          {static} + main()
          {static} - display()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.NodesLength.LinkedList {
          + addNode()
          + getFirstNodeElem()
          + getLastElem()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.NodesLength.Node {
          ~ data : int
          + Node()
          + Node()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.RevereseSinglyLinkedList {
          {static} + main()
          {static} + reverseLinkedList()
          {static} - display()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.RevereseSinglyLinkedList.Node {
          ~ data : Object
          + Node()
          + toString()
      }
    }
  }
  

  namespace  {
    namespace inkedListDS {
      class LinkedListDS.RevereseSinglyLinkedList.SinglyLinkedList {
          + SinglyLinkedList()
          + addNode()
      }
    }
  }
  

  LinkedListDS.InsertANodeAtPosition +-down- LinkedListDS.InsertANodeAtPosition.LinkedList
  LinkedListDS.InsertANodeAtPosition +-down- LinkedListDS.InsertANodeAtPosition.Node
  LinkedListDS.InsertANodeAtPosition.LinkedList o-- LinkedListDS.InsertANodeAtPosition.Node : head
  LinkedListDS.InsertANodeAtPosition.Node o-- LinkedListDS.InsertANodeAtPosition.Node : next
  LinkedListDS.LinkedList o-- LinkedListDS.LinkedList.Node : head
  LinkedListDS.LinkedList o-- LinkedListDS.LinkedList.Node : tail
  LinkedListDS.LinkedList +-down- LinkedListDS.LinkedList.Node
  LinkedListDS.LinkedList.Node o-- LinkedListDS.LinkedList.Node : next
  LinkedListDS.NodesLength +-down- LinkedListDS.NodesLength.LinkedList
  LinkedListDS.NodesLength +-down- LinkedListDS.NodesLength.Node
  LinkedListDS.NodesLength.LinkedList o-- LinkedListDS.NodesLength.Node : head
  LinkedListDS.NodesLength.Node o-- LinkedListDS.NodesLength.Node : next
  LinkedListDS.RevereseSinglyLinkedList +-down- LinkedListDS.RevereseSinglyLinkedList.Node
  LinkedListDS.RevereseSinglyLinkedList +-down- LinkedListDS.RevereseSinglyLinkedList.SinglyLinkedList
  LinkedListDS.RevereseSinglyLinkedList.Node o-- LinkedListDS.RevereseSinglyLinkedList.Node : next
  LinkedListDS.RevereseSinglyLinkedList.SinglyLinkedList o-- LinkedListDS.RevereseSinglyLinkedList.Node : head


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
